// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String    @id @default(uuid())
  userId              String    @map("user_id")
  type                String
  provider            String
  providerAccountId   String    @map("provider_accoint_id")
  refresh_token       String?   @db.Text
  access_token        String?   @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?   @db.Text
  session_state       String?
  createdAt           DateTime  @map("created_at") @default(now())
  updatedAt           DateTime  @map("updated_at") @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String           @id @default(uuid())
  sessionToken String           @map("session_token") @unique
  userId       String           @map("user_id")
  expires      DateTime
  createdAt    DateTime         @map("created_at") @default(now())
  updatedAt    DateTime         @map("updated_at") @updatedAt

  user         User             @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String          @id @default(uuid())
  name          String?         @map("given_names")
  lastName      String?         @map("last_name")
  email         String?         @unique
  role          Role            @default(USER)
  emailVerified DateTime?       @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime        @map("created_at") @default(now())
  updatedAt     DateTime        @map("updated_at") @updatedAt
}

enum Role {
  ADMIN
  USER
}

model VerificationToken {
  identifier  String
  token       String            @unique
  expires     DateTime
  createdAt   DateTime          @map("created_at") @default(now())
  updatedAt   DateTime          @map("updated_at") @updatedAt

  @@unique([identifier, token])
}